{
	"title": "Introduction",
	"assignment": "assign00",
	"writeup": "https://PUT-IN-A-REASONABLEW-ASSIGNMENT-URL",
	"runner": {
	  "type": null,
	  "package": null,
	  "mainclass": null
	},
	"tests": [
	  {
		"name": "getValue_returns_as_constructed(introduction.Autograder)",
		"descr": "getValue returns the correct value of the Token upon construction. For example, Token(,1) -> 1, Token(,10) -> 10",
		"score": 0.5
	  },
	  {
		"name": "setValue_changes_value(introduction.Autograder)",
		"descr": "setValue correctly updates the value of the Token to the given value. For example, Token(,1).setValue(6), getValue -> 6",
		"score": 0.5
	  },
	  {
		"name": "setColor_changes_color(introduction.Autograder)",
		"descr": "setColor correctly updates the color of the Token to the given value. For example, Token(vermilion,).setColor(Chartreuse), getColor -> Chartreuse",
		"score": 0.5
	  },
	  {
		"name": "highValue_for_half_max(introduction.Autograder)",
		"descr": "isHighValue correctly returns False for half of the maximum value. For example,Token(,5).isHighValue() -> False",
		"score": 0.25
	  },
	  {
		"name": "highValue_for_half_plus_1(introduction.Autograder)",
		"descr": "isHighValue correctly returns True for half of the maximum value +1. For example,Token(,6).isHighValue() -> True",
		"score": 0.25
	  },
	  {
		"name": "toString_as_expected(introduction.Autograder)",
		"descr": "toString returns Token string representation as expected. For example, Token(Green,5) -> Token's color is Green and has value 5",
		"score": 1.0
	  },
  
	  {
		"name": "addTokens_sums_correctly(introduction.Autograder)",
		"descr": "addTokens returns expected sum",
		"score": 1.0
	  },
	  {
		"name": "highValueTokens_counts_correctly(introduction.Autograder)",
		"descr": "highValueTokens returns expected count",
		"score": 1.0
	  },
	  {
		"name": "firstGreen_finds_correctly(introduction.Autograder)",
		"descr": "firstGreen finds first Green Token",
		"score": 1.0
	  },
	  {
		"name": "submitted correctly",
		"score": 1.0
	  },
	  {
		"name": "builds correctly",
		"score": 1.0
	  },
	  {
		"name": "style and formatting",
		"score": 1.0
	  },
	  {
		"name": "submitted on time (negative if late)",
		"score": 0.0
	  }
	]
  }
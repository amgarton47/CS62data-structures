/* * Program to artificially generate sentences */import java.io.BufferedReader;import java.io.File;import java.io.FileReader;import java.io.IOException;import java.util.ArrayList;import java.util.List;import java.util.Random;import structure5.Association;import javax.swing.JFileChooser;import javax.swing.JOptionPane;public class TextGenerator {	// List of Association of letter pairs and frequency lists	protected List<Association<StringPair, FreqList>> letPairList;	protected Random generator = new Random(); // Random number generator	// constructor for table of length "size"	public TextGenerator(int size) {		letPairList = new ArrayList<Association<StringPair, FreqList>>(size);	}	/**	 * @param first  string to be first part of key	 * @param second  string to be second part of key	 * @param third  word to be inserted in frequency list associated 	 *   with <first,second>	 *  post: Update frequency of the third word following the first two	 *  by adding 1.  If not yet in table, add with frequency 1.	 */	public void enter(String first, String second, String third) {		FreqList freq; // Frequency list associated with first and second		// Create association with pair of first and second to use in search		Association<StringPair, FreqList> assoc = new Association<StringPair, FreqList>(				new StringPair(first, second), null);		int itemNum = letPairList.indexOf(assoc);		if (itemNum == -1) {			freq = new FreqList();			assoc.setValue(freq);			letPairList.add(assoc);		} else {			Association<StringPair, FreqList> element = letPairList					.get(itemNum);			freq = element.getValue();		}		freq.add(third);	}	/**	 * 	 * @param first  last two words generated in output text	 * @param second	 * @return new word chosen randomly from those in the association	 * list associated with <first,second>.  The probability of a word is 	 * directly proportional to its frequency in the list.	 */	public String getNextWord(String first, String second) {		Association<StringPair, FreqList> assoc = new Association<StringPair, FreqList>(				new StringPair(first, second), null);		String nextString;		int itemNum = letPairList.indexOf(assoc);		if (itemNum == -1) {			return "";		} else {			Association<StringPair, FreqList> element = letPairList					.get(itemNum);			FreqList freq = element.getValue();			nextString = freq.get(generator.nextFloat());			return nextString;		}	}	/**	 * @return string representing the table in readable form.	 */	public String toString() {		String output = "The table size is " + letPairList.size() + "\n";		for (Association<StringPair, FreqList> elt : letPairList) {			output = output + elt + "\n";		}		return output;	}	/**	 * 	 * @param args -- ignored	 * post: User opens a text file, the program builds a TextGenerator	 * table from the input and then generates words.  The first two words	 * are the first two of the input.  Subsequent words are chosen according 	 * to the frequency list associated with the two previous words.	 */	public static void main(String args[]) {		String first, second;		TextGenerator table = new TextGenerator(50);		WordStream ws = new WordStream();		JFileChooser dialog = new JFileChooser();		System.out.println("starting");		// Display the dialog box and make sure the user did not cancel.		if (dialog.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {			// Find out which file the user selected.			File file = dialog.getSelectedFile();			try {				// Open the file.				BufferedReader input = new BufferedReader(new FileReader(file));				// Fill up the editing area with the contents of the file being				// read.				String line = input.readLine();				while (line != null) {					ws.addLexItems(line.toLowerCase());					System.out.println(line);					line = input.readLine();				}				System.out.println("Finished reading data");				// Close the file				input.close();			} catch (IOException e) {				JOptionPane.showMessageDialog(null, "Can't load file "						+ e.getMessage());			}			first = ws.nextToken();			second = ws.nextToken();			String origFirst = first;			String origSecond = second;			while (ws.hasMoreTokens()) {				String third = ws.nextToken();				table.enter(first, second, third);				first = second;				second = third;			}			first = origFirst;			second = origSecond;			String newText = "" + origFirst + " " + origSecond;			for (int wordNo = 2; wordNo < 200; wordNo++) {				String third = table.getNextWord(first, second);				newText = newText + " " + third;				if (wordNo % 20 == 0) {					newText = newText + "\n";				}				first = second;				second = third;			}			System.out.println("Table contains:\n" + table);			System.out.println("Generated data is:\n" + newText);		} else {			System.out.println("User cancelled file chooser");		}	}}